<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="8/30/2021 8:29:14 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="CVPKHANGNHN"
  DTS:CreatorName="FSOFT.FPT.VN\KhangNHN"
  DTS:DTSID="{2AD80622-2980-4370-9D53-2A16C101B294}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.2000.167"
  DTS:LocaleID="1033"
  DTS:ObjectName="Package1"
  DTS:PackageType="5"
  DTS:VersionBuild="13"
  DTS:VersionGUID="{3CCED75D-8E75-4C54-B82A-F5615775205B}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:Variables />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Create python sript to unload"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{1f6d3ccc-c159-4da9-ae5e-416cf4299d1d}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Create python sript to unload"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_398154e18d3a430a879d6eef8102eb70"
          VSTAMajorVersion="15"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="$Project::WorkingPath,$Project::SnowFlakeFilePath,$Project::SnowSQLConfigFilePath">
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ST_398154e18d3a430a879d6eef8102eb70.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{4d656ec9-f411-4976-91f7-28e18b3a2186}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_b929af78d1c54ee990186b15245b95cd</RootNamespace>
    <AssemblyName>ST_398154e18d3a430a879d6eef8102eb70</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_ST150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_b929af78d1c54ee990186b15245b95cd.Properties.Settings.get_Default():ST_b929af78d1c54ee990186b15245b95cd.Properties.Sett" +
    "ings")]

namespace ST_b929af78d1c54ee990186b15245b95cd.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;
#endregion

namespace ST_b929af78d1c54ee990186b15245b95cd
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            // Variables
            string snowflakeFolder = (string)Dts.Variables["$Project::SnowFlakeFilePath"].Value + "\\SQLToSnow";
            string unloadfilename = snowflakeFolder+"\\Backupdata_From_Snow.py";
            string configfile = (string)Dts.Variables["$Project::SnowSQLConfigFilePath"].Value + "\\config";
            string workingFolder = (string)Dts.Variables["$Project::WorkingPath"].Value ;

            // Create python files
            // Upload
            { // Create a file to write to   
                using (StreamWriter sw = new StreamWriter(unloadfilename,false))
                {
                    sw.WriteLine("import time");
                    sw.WriteLine("import snowflake.connector ");
                    sw.WriteLine("from datetime import datetime");
                    sw.WriteLine("import os");
                    sw.WriteLine("import configparser ");
                    sw.WriteLine("import shutil ");
                    sw.WriteLine("t_start = time.time()");
                    sw.WriteLine("stamp = datetime.now().strftime(\"%Y-%m-%d_%H-%M-%S\")");
                    sw.WriteLine("tmpfolder = 'Backup_data_'+stamp");
                    sw.WriteLine("os.makedirs(tmpfolder)");
                    sw.WriteLine("configf = (r\""+configfile+"\") ");
                    sw.WriteLine("parser = configparser.ConfigParser()");
                    sw.WriteLine("parser.read(configf)");
                    sw.WriteLine("User = parser.get(\"connections.Project02\", \"username\")");
                    sw.WriteLine("Account = parser.get(\"connections.Project02\", \"accountname\")");
                    sw.WriteLine("Password = parser.get(\"connections.Project02\", \"password\")");
                    sw.WriteLine("Role = parser.get(\"connections.Project02\", \"rolename\")");
                    sw.WriteLine("Database = parser.get(\"connections.Project02\", \"dbname\")");
                    sw.WriteLine("Datawarehouse = parser.get(\"connections.Project02\", \"warehousename\")");
                    sw.WriteLine("Schema = parser.get(\"connections.Project02\", \"schemaname\")");
                    sw.WriteLine("## conect to snow sql");
                    sw.WriteLine("scnn = snowflake.connector.connect(user = User, password = Password, ");
                    sw.WriteLine("                                   account = Account, rolename = Role,");
                    sw.WriteLine("                                   database = Database, warehouse = Datawarehouse,");
                    sw.WriteLine("                                   schema = Schema)");
                    sw.WriteLine("cs = scnn.cursor()");
                    sw.WriteLine("  ");
                    sw.WriteLine("def unloaddata(cs, sql, table_name, timestamp):");
                    sw.WriteLine("    cs.execute(sql)");
                    sw.WriteLine("    df = cs.fetch_pandas_all()");
                    sw.WriteLine("    df.to_csv(\'./Backup_data_\'+timestamp+\'/\'+table_name+\'.csv\', index = False)");
                    sw.WriteLine("    return");
                    sw.WriteLine(" ");
                    sw.WriteLine("sql = [(\'SELECT * FROM FA_PROJECT02_DB.GameBI.DIM_Country;\'),");
                    sw.WriteLine("      (\'SELECT * FROM FA_PROJECT02_DB.GameBI.DIM_User;\'),");
                    sw.WriteLine("      (\'SELECT * FROM FA_PROJECT02_DB.GameBI.DIM_Game;\'),");
                    sw.WriteLine("      (\'SELECT * FROM FA_PROJECT02_DB.GameBI.FACT_Transactions;\')]");
                    sw.WriteLine("table_name = [\'GameBI.DIM_Country\', \'GameBI.DIM_User\', \'GameBI.DIM_Game\', ");
                    sw.WriteLine("             \'GameBI.FACT_Transactions\' ]");
                    sw.WriteLine(" ");
                    sw.WriteLine("if __name__ == \'__main__\':");
                    sw.WriteLine("    print('Unloading data into Local Machine ...')");
                    sw.WriteLine("    for (sql_cmd, table) in zip(sql, table_name):");
                    sw.WriteLine("        unloaddata(cs, sql_cmd, table, stamp)");
                    sw.WriteLine("    scnn.close()");
                    sw.WriteLine("    shutil.move(\'./\'+tmpfolder,r\'"+workingFolder+"\')");
                    sw.WriteLine("    print(\'Unload  done in {0:.2f} s\'.format((time.time()-t_start)))");
                    sw.Close();
                }
            }

            Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_398154e18d3a430a879d6eef8102eb70</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_398154e18d3a430a879d6eef8102eb70</msb:DisplayName>
    <msb:ProjectId>{C957D8CB-4494-43BC-A4B7-401FD6B4F9AD}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_398154e18d3a430a879d6eef8102eb70.csproj" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_b929af78d1c54ee990186b15245b95cd")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_b929af78d1c54ee990186b15245b95cd")]
[assembly: AssemblyCopyright("Copyright @  2021")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_b929af78d1c54ee990186b15245b95cd.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_b929af78d1c54ee990186b15245b95cd.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_b929af78d1c54ee990186b15245b95cd.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_b929af78d1c54ee990186b15245b95cd.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_b929af78d1c54ee990186b15245b95cd.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_398154e18d3a430a879d6eef8102eb70.dll">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
BgClAPYDBgD/APYDBgCxAPYDBgDBBUMEAAAAACUAAAAAAAEAAQABABAADgRoADkAAQABAAAAEADU
BDAFSQABAAMAAAEQAG0FMAVdAAMABwADAQAAhgUAAEEABAAKABEAAgR7ABEAJAF/ABEAjACDAAYG
VwCHAFaAdgWKAFaABAGKAFAgAAAAAIYAFAQGAAEAOCMAAAAAhhiNBAYAAQBAIwAAAACDGI0EBgAB
AEgjAAAAAJMIYQSOAAEAdCMAAAAAkwgMAZMAAQB7IwAAAACTCBgBmAABAIMjAAAAAJYIogWeAAIA
iiMAAAAAhhiNBAYAAgCSIwAAAACRGJMEowACAAAAAQAuAwkAjQQBABEAjQQGABkAjQQKACkAjQQQ
ADEAjQQQADkAjQQQAEEAjQQQAEkAjQQQAFEAjQQQAFkAjQQQAGEAjQQQAGkAjQQGAIkAjQQGALEA
jQQVAMEAjQQGAHEAfgUiAMkAXwUnANEA7QMsANkAJAMyAOEAlAU2AHkAjQQ8AOkA9QAQAOEAlAVC
AOkAaAEGAPEAbgEGAMkArgUBAHEAjQQGAJEAjQQGAPkAwwBJAPkAvQVRAJkAjQRXALkAjQQGAAgA
FABxAAgAGAB2ACkAcwDeAC4ACwC2AC4AEwC/AC4AGwDeAC4AIwDnAC4AKwAQAS4AMwAQAS4AOwAQ
AS4AQwDnAC4ASwAWAS4AUwAQAS4AWwAtAUMAYwB2AEkAcwDeAGEAewB2AGMAawB2ABsAAwABAAQA
AwAAAGUEpwAAACwBrAAAAKYFsQACAAQAAwACAAUABQABAAYABQACAAcABwAEgAAAAQAAAOge0aEA
AAAAAAABAAAABAAAAAAAAAAAAAAAXwBfAAAAAAAPAAAAAAAAAAAAAABoAFUDAAAAAAQAAAAAAAAA
AAAAAF8A9gMAAAAADwAAAAAAAAAAAAAAaAA4AAAAAAAAAAAAAQAAAN4EAAAFAAIAAAAAAABTVF8z
OTgxNTRlMThkM2E0MzBhODc5ZDZlZWY4MTAyZWI3MAA8TW9kdWxlPgBTeXN0ZW0uSU8ATWljcm9z
b2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAHZhbHVlX18AbXNjb3JsaWIAU1RfYjkyOWFmNzhkMWM1
NGVlOTkwMTg2YjE1MjQ1Yjk1Y2QAZGVmYXVsdEluc3RhbmNlAFZhcmlhYmxlAElEaXNwb3NhYmxl
AFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAE1pY3Jvc29mdC5TcWxTZXJ2ZXIu
RHRzLlJ1bnRpbWUAV3JpdGVMaW5lAFR5cGUARmFpbHVyZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVy
ZQByZXNvdXJjZUN1bHR1cmUAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEFwcGxpY2F0aW9u
U2V0dGluZ3NCYXNlAENsb3NlAERpc3Bvc2UARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJH
ZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxl
QXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRl
AEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3Nl
bWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBD
b21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBB
c3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1
dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRl
AGdldF9WYWx1ZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFN0cmluZwBNaWNyb3Nv
ZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuVGFza3MuU2Ny
aXB0VGFzawBTY3JpcHRPYmplY3RNb2RlbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU1RfMzk4MTU0
ZTE4ZDNhNDMwYTg3OWQ2ZWVmODEwMmViNzAuZGxsAGdldF9JdGVtAFN5c3RlbQBFbnVtAHJlc291
cmNlTWFuAFNjcmlwdE1haW4AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRp
b24AU3lzdGVtLlJlZmxlY3Rpb24AQ3VsdHVyZUluZm8AZ2V0X1Jlc291cmNlTWFuYWdlcgBTdHJl
YW1Xcml0ZXIAVGV4dFdyaXRlcgAuY3RvcgAuY2N0b3IAU3lzdGVtLkRpYWdub3N0aWNzAFN5c3Rl
bS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTVF9iOTI5YWY3OGQx
YzU0ZWU5OTAxODZiMTUyNDViOTVjZC5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVi
dWdnaW5nTW9kZXMAU1RfYjkyOWFmNzhkMWM1NGVlOTkwMTg2YjE1MjQ1Yjk1Y2QuUHJvcGVydGll
cwBnZXRfVmFyaWFibGVzAFNldHRpbmdzAFN1Y2Nlc3MAZ2V0X0R0cwBTY3JpcHRSZXN1bHRzAENv
bmNhdABPYmplY3QAZ2V0X0RlZmF1bHQAc2V0X1Rhc2tSZXN1bHQAZ2V0X0Fzc2VtYmx5AAAAADck
AFAAcgBvAGoAZQBjAHQAOgA6AFMAbgBvAHcARgBsAGEAawBlAEYAaQBsAGUAUABhAHQAaAAAFVwA
UwBRAEwAVABvAFMAbgBvAHcAADFcAEIAYQBjAGsAdQBwAGQAYQB0AGEAXwBGAHIAbwBtAF8AUwBu
AG8AdwAuAHAAeQAAPyQAUAByAG8AagBlAGMAdAA6ADoAUwBuAG8AdwBTAFEATABDAG8AbgBmAGkA
ZwBGAGkAbABlAFAAYQB0AGgAAA9cAGMAbwBuAGYAaQBnAAArJABQAHIAbwBqAGUAYwB0ADoAOgBX
AG8AcgBrAGkAbgBnAFAAYQB0AGgAABdpAG0AcABvAHIAdAAgAHQAaQBtAGUAADdpAG0AcABvAHIA
dAAgAHMAbgBvAHcAZgBsAGEAawBlAC4AYwBvAG4AbgBlAGMAdABvAHIAIAAAO2YAcgBvAG0AIABk
AGEAdABlAHQAaQBtAGUAIABpAG0AcABvAHIAdAAgAGQAYQB0AGUAdABpAG0AZQAAE2kAbQBwAG8A
cgB0ACAAbwBzAAApaQBtAHAAbwByAHQAIABjAG8AbgBmAGkAZwBwAGEAcgBzAGUAcgAgAAAdaQBt
AHAAbwByAHQAIABzAGgAdQB0AGkAbAAgAAArdABfAHMAdABhAHIAdAAgAD0AIAB0AGkAbQBlAC4A
dABpAG0AZQAoACkAAGlzAHQAYQBtAHAAIAA9ACAAZABhAHQAZQB0AGkAbQBlAC4AbgBvAHcAKAAp
AC4AcwB0AHIAZgB0AGkAbQBlACgAIgAlAFkALQAlAG0ALQAlAGQAXwAlAEgALQAlAE0ALQAlAFMA
IgApAAFBdABtAHAAZgBvAGwAZABlAHIAIAA9ACAAJwBCAGEAYwBrAHUAcABfAGQAYQB0AGEAXwAn
ACsAcwB0AGEAbQBwAAEtbwBzAC4AbQBhAGsAZQBkAGkAcgBzACgAdABtAHAAZgBvAGwAZABlAHIA
KQAAG2MAbwBuAGYAaQBnAGYAIAA9ACAAKAByACIAAAciACkAIAAASXAAYQByAHMAZQByACAAPQAg
AGMAbwBuAGYAaQBnAHAAYQByAHMAZQByAC4AQwBvAG4AZgBpAGcAUABhAHIAcwBlAHIAKAApAAAp
cABhAHIAcwBlAHIALgByAGUAYQBkACgAYwBvAG4AZgBpAGcAZgApAABtVQBzAGUAcgAgAD0AIABw
AGEAcgBzAGUAcgAuAGcAZQB0ACgAIgBjAG8AbgBuAGUAYwB0AGkAbwBuAHMALgBQAHIAbwBqAGUA
YwB0ADAAMgAiACwAIAAiAHUAcwBlAHIAbgBhAG0AZQAiACkAAHlBAGMAYwBvAHUAbgB0ACAAPQAg
AHAAYQByAHMAZQByAC4AZwBlAHQAKAAiAGMAbwBuAG4AZQBjAHQAaQBvAG4AcwAuAFAAcgBvAGoA
ZQBjAHQAMAAyACIALAAgACIAYQBjAGMAbwB1AG4AdABuAGEAbQBlACIAKQAAdVAAYQBzAHMAdwBv
AHIAZAAgAD0AIABwAGEAcgBzAGUAcgAuAGcAZQB0ACgAIgBjAG8AbgBuAGUAYwB0AGkAbwBuAHMA
LgBQAHIAbwBqAGUAYwB0ADAAMgAiACwAIAAiAHAAYQBzAHMAdwBvAHIAZAAiACkAAG1SAG8AbABl
ACAAPQAgAHAAYQByAHMAZQByAC4AZwBlAHQAKAAiAGMAbwBuAG4AZQBjAHQAaQBvAG4AcwAuAFAA
cgBvAGoAZQBjAHQAMAAyACIALAAgACIAcgBvAGwAZQBuAGEAbQBlACIAKQAAcUQAYQB0AGEAYgBh
AHMAZQAgAD0AIABwAGEAcgBzAGUAcgAuAGcAZQB0ACgAIgBjAG8AbgBuAGUAYwB0AGkAbwBuAHMA
LgBQAHIAbwBqAGUAYwB0ADAAMgAiACwAIAAiAGQAYgBuAGEAbQBlACIAKQAAgIlEAGEAdABhAHcA
YQByAGUAaABvAHUAcwBlACAAPQAgAHAAYQByAHMAZQByAC4AZwBlAHQAKAAiAGMAbwBuAG4AZQBj
AHQAaQBvAG4AcwAuAFAAcgBvAGoAZQBjAHQAMAAyACIALAAgACIAdwBhAHIAZQBoAG8AdQBzAGUA
bgBhAG0AZQAiACkAAHVTAGMAaABlAG0AYQAgAD0AIABwAGEAcgBzAGUAcgAuAGcAZQB0ACgAIgBj
AG8AbgBuAGUAYwB0AGkAbwBuAHMALgBQAHIAbwBqAGUAYwB0ADAAMgAiACwAIAAiAHMAYwBoAGUA
bQBhAG4AYQBtAGUAIgApAAArIwAjACAAYwBvAG4AZQBjAHQAIAB0AG8AIABzAG4AbwB3ACAAcwBx
AGwAAICLcwBjAG4AbgAgAD0AIABzAG4AbwB3AGYAbABhAGsAZQAuAGMAbwBuAG4AZQBjAHQAbwBy
AC4AYwBvAG4AbgBlAGMAdAAoAHUAcwBlAHIAIAA9ACAAVQBzAGUAcgAsACAAcABhAHMAcwB3AG8A
cgBkACAAPQAgAFAAYQBzAHMAdwBvAHIAZAAsACAAAICNIAAgACAAIAAgACAAIAAgACAAIAAgACAA
IAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAGEAYwBjAG8AdQBu
AHQAIAA9ACAAQQBjAGMAbwB1AG4AdAAsACAAcgBvAGwAZQBuAGEAbQBlACAAPQAgAFIAbwBsAGUA
LAAAgKUgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAA
IAAgACAAIAAgACAAIAAgACAAZABhAHQAYQBiAGEAcwBlACAAPQAgAEQAYQB0AGEAYgBhAHMAZQAs
ACAAdwBhAHIAZQBoAG8AdQBzAGUAIAA9ACAARABhAHQAYQB3AGEAcgBlAGgAbwB1AHMAZQAsAABn
IAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgAHMAYwBoAGUAbQBhACAAPQAgAFMAYwBoAGUAbQBhACkAACVjAHMAIAA9ACAA
cwBjAG4AbgAuAGMAdQByAHMAbwByACgAKQAABSAAIAAAX2QAZQBmACAAdQBuAGwAbwBhAGQAZABh
AHQAYQAoAGMAcwAsACAAcwBxAGwALAAgAHQAYQBiAGwAZQBfAG4AYQBtAGUALAAgAHQAaQBtAGUA
cwB0AGEAbQBwACkAOgAAJyAAIAAgACAAYwBzAC4AZQB4AGUAYwB1AHQAZQAoAHMAcQBsACkAAD0g
ACAAIAAgAGQAZgAgAD0AIABjAHMALgBmAGUAdABjAGgAXwBwAGEAbgBkAGEAcwBfAGEAbABsACgA
KQAAgJ0gACAAIAAgAGQAZgAuAHQAbwBfAGMAcwB2ACgAJwAuAC8AQgBhAGMAawB1AHAAXwBkAGEA
dABhAF8AJwArAHQAaQBtAGUAcwB0AGEAbQBwACsAJwAvACcAKwB0AGEAYgBsAGUAXwBuAGEAbQBl
ACsAJwAuAGMAcwB2ACcALAAgAGkAbgBkAGUAeAAgAD0AIABGAGEAbABzAGUAKQABFSAAIAAgACAA
cgBlAHQAdQByAG4AAAMgAAB7cwBxAGwAIAA9ACAAWwAoACcAUwBFAEwARQBDAFQAIAAqACAARgBS
AE8ATQAgAEYAQQBfAFAAUgBPAEoARQBDAFQAMAAyAF8ARABCAC4ARwBhAG0AZQBCAEkALgBEAEkA
TQBfAEMAbwB1AG4AdAByAHkAOwAnACkALAABcyAAIAAgACAAIAAgACgAJwBTAEUATABFAEMAVAAg
ACoAIABGAFIATwBNACAARgBBAF8AUABSAE8ASgBFAEMAVAAwADIAXwBEAEIALgBHAGEAbQBlAEIA
SQAuAEQASQBNAF8AVQBzAGUAcgA7ACcAKQAsAAFzIAAgACAAIAAgACAAKAAnAFMARQBMAEUAQwBU
ACAAKgAgAEYAUgBPAE0AIABGAEEAXwBQAFIATwBKAEUAQwBUADAAMgBfAEQAQgAuAEcAYQBtAGUA
QgBJAC4ARABJAE0AXwBHAGEAbQBlADsAJwApACwAAYCFIAAgACAAIAAgACAAKAAnAFMARQBMAEUA
QwBUACAAKgAgAEYAUgBPAE0AIABGAEEAXwBQAFIATwBKAEUAQwBUADAAMgBfAEQAQgAuAEcAYQBt
AGUAQgBJAC4ARgBBAEMAVABfAFQAcgBhAG4AcwBhAGMAdABpAG8AbgBzADsAJwApAF0AAYCVdABh
AGIAbABlAF8AbgBhAG0AZQAgAD0AIABbACcARwBhAG0AZQBCAEkALgBEAEkATQBfAEMAbwB1AG4A
dAByAHkAJwAsACAAJwBHAGEAbQBlAEIASQAuAEQASQBNAF8AVQBzAGUAcgAnACwAIAAnAEcAYQBt
AGUAQgBJAC4ARABJAE0AXwBHAGEAbQBlACcALAAgAAFTIAAgACAAIAAgACAAIAAgACAAIAAgACAA
IAAnAEcAYQBtAGUAQgBJAC4ARgBBAEMAVABfAFQAcgBhAG4AcwBhAGMAdABpAG8AbgBzACcAIABd
AAE1aQBmACAAXwBfAG4AYQBtAGUAXwBfACAAPQA9ACAAJwBfAF8AbQBhAGkAbgBfAF8AJwA6AAFl
IAAgACAAIABwAHIAaQBuAHQAKAAnAFUAbgBsAG8AYQBkAGkAbgBnACAAZABhAHQAYQAgAGkAbgB0
AG8AIABMAG8AYwBhAGwAIABNAGEAYwBoAGkAbgBlACAALgAuAC4AJwApAAFjIAAgACAAIABmAG8A
cgAgACgAcwBxAGwAXwBjAG0AZAAsACAAdABhAGIAbABlACkAIABpAG4AIAB6AGkAcAAoAHMAcQBs
ACwAIAB0AGEAYgBsAGUAXwBuAGEAbQBlACkAOgAAWyAAIAAgACAAIAAgACAAIAB1AG4AbABvAGEA
ZABkAGEAdABhACgAYwBzACwAIABzAHEAbABfAGMAbQBkACwAIAB0AGEAYgBsAGUALAAgAHMAdABh
AG0AcAApAAAhIAAgACAAIABzAGMAbgBuAC4AYwBsAG8AcwBlACgAKQAAQyAAIAAgACAAcwBoAHUA
dABpAGwALgBtAG8AdgBlACgAJwAuAC8AJwArAHQAbQBwAGYAbwBsAGQAZQByACwAcgAnAAEFJwAp
AAGAiSAAIAAgACAAcAByAGkAbgB0ACgAJwBVAG4AbABvAGEAZAAgACAAZABvAG4AZQAgAGkAbgAg
AHsAMAA6AC4AMgBmAH0AIABzACcALgBmAG8AcgBtAGEAdAAoACgAdABpAG0AZQAuAHQAaQBtAGUA
KAApAC0AdABfAHMAdABhAHIAdAApACkAKQABcVMAVABfAGIAOQAyADkAYQBmADcAOABkADEAYwA1
ADQAZQBlADkAOQAwADEAOAA2AGIAMQA1ADIANAA1AGIAOQA1AGMAZAAuAFAAcgBvAHAAZQByAHQA
aQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAAAMVxmlOS1ZBvzEPrFqzRu4ABCABAQgDIAABBSAB
ARERBCABAQ4FIAEBEVUGBwMODhI9BCAAEmUEIAASaQUgARJtHAMgABwFAAIODg4FIAIBDgIGAAMO
Dg4OBwABEn0RgIEFIAASgIUHIAIBDhKAhQi3elxWGTTgiQiJhF3NgIDMkQQAAAAABAEAAAADBhJN
AwYSUQMGEhACBggDBhEUBAAAEk0EAAASUQUAAQESUQQAABIQAwAAAQQIABJNBAgAElEECAASEAgB
AAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU1RfYjky
OWFmNzhkMWM1NGVlOTkwMTg2YjE1MjQ1Yjk1Y2QAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAy
MQAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC43AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFt
ZRIuTkVUIEZyYW1ld29yayA0LjcAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJl
c291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWws
IFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1l
UmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAJRAAAAAAAAAAAAAAK5AAAAAIAAAAAAA
AAAAAAAAAAAAAAAAAAAAAACgQAAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAA
AAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAA
AAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWGAA
ABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+
AAABAAAAAQDRoegeAAABANGh6B4/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBh
AHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAA
sAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAAMAAwADAANABi
ADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4AeQBOAGEA
bQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAVABf
AGIAOQAyADkAYQBmADcAOABkADEAYwA1ADQAZQBlADkAOQAwADEAOAA2AGIAMQA1ADIANAA1AGIA
OQA1AGMAZAAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA3ADkAMQAy
AC4ANAAxADQAMgA1AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAVABfADMA
OQA4ADEANQA0AGUAMQA4AGQAMwBhADQAMwAwAGEAOAA3ADkAZAA2AGUAZQBmADgAMQAwADIAZQBi
ADcAMAAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAA
eQByAGkAZwBoAHQAIABAACAAIAAyADAAMgAxAAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBt
AGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAA
UwBUAF8AMwA5ADgAMQA1ADQAZQAxADgAZAAzAGEANAAzADAAYQA4ADcAOQBkADYAZQBlAGYAOAAx
ADAAMgBlAGIANwAwAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMA
VABfAGIAOQAyADkAYQBmADcAOABkADEAYwA1ADQAZQBlADkAOQAwADEAOAA2AGIAMQA1ADIANAA1
AGIAOQA1AGMAZAAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4A
NwA5ADEAMgAuADQAMQA0ADIANQAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBp
AG8AbgAAADEALgAwAC4ANwA5ADEAMgAuADQAMQA0ADIANQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAwAAADAMAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Run Py_Backup DW"
      DTS:CreationName="Microsoft.ExecuteProcess"
      DTS:DelayValidation="True"
      DTS:Description="Execute Process Task"
      DTS:DTSID="{d098461f-f8e6-4402-bb23-9077a3535855}"
      DTS:ExecutableType="Microsoft.ExecuteProcess"
      DTS:LocaleID="-1"
      DTS:ObjectName="Run Py_Backup DW"
      DTS:TaskContact="Execute Process Task;Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:PropertyExpression
        DTS:Name="Arguments">"Backupdata_From_Snow.py"</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="DelayValidation">(DT_BOOL)"TRUE"</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="Executable">@[$Project::PythonexePath]+"\\python.exe"</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="WorkingDirectory">@[$Project::SnowFlakeFilePath]+"\\SQLToSnow"</DTS:PropertyExpression>
      <DTS:ObjectData>
        <ExecuteProcessData
          Executable="C:\Users\KhangNHN\AppData\Local\Programs\Python\Python39\python.exe"
          Arguments="Backupdata_From_Snow.py"
          WorkingDirectory="E:\training_document_data2021\week456-miniproject\project02\debug_folder\python_debug\Working-Folder\SQLToSnow" />
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{63f50353-3076-4152-a89d-77e2854f391c}"
      DTS:From="Package\Create python sript to unload"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Run Py_Backup DW" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="217,42"
          Id="Package\Create python sript to unload"
          TopLeft="60,60" />
        <NodeLayout
          Size="172,42"
          Id="Package\Run Py_Backup DW"
          TopLeft="75.5,162" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="165,102">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>